---
type Props = Selection<any>;

export interface Selection<V> {
  param: string;
  default: string;
  options: Option<V>[];
}

export interface Option<V> {
  name: string;
  id: string;
  value: V;
}

const selection = Astro.props;
const selected = getSelected(selection, Astro.url);

export function getOption<V>(options: Option<V>[], id: string) {
  return options.find((o) => o.id === id);
}

export function getSelected<V>(selection: Selection<V>, { searchParams }: URL) {
  const id = searchParams.get(selection.param) ?? selection.default;
  return getOption(selection.options, id)!;
}
---

<select name={selection.param}>
  {
    selection.options.map((option) => (
      <option selected={option.id === selected.id} value={option.id}>
        {option.name}
      </option>
    ))
  }
</select>
