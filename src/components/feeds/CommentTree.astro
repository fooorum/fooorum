---
import Stack from "@components/feeds/Stack.astro";
import Card from "@components/cards/Comment.astro";
import Separator from "./Separator.astro";
import { eq, and, Comment, ne, TRUE } from "astro:db";
import { selectComments } from "@lib/db";
import { isNull } from "astro:db";

interface Props {
  postId: number;
  parentId?: number;
}

const { postId, parentId } = Astro.props;

const filters = [ne(Comment.deleted, TRUE), eq(Comment.postId, postId)];
if (parentId === undefined) filters.push(isNull(Comment.parentId));
else filters.push(eq(Comment.parentId, parentId));

const comments = await selectComments({ userId: Astro.locals.user?.id }).where(
  and(...filters),
);
---

<div class="comments">
  <Stack>
    {
      comments.map((comment) => [
        <Separator />,
        <Card {...comment} />,
        <Astro.self postId={postId} parentId={comment.id} />,
      ])
    }
  </Stack>
</div>

<style lang="scss">
  .comments {
    border-left: solid 2px var(--accent);
    padding-left: 0.5em;
  }
</style>
