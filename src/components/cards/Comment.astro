---
import Card from "@components/cards/Card.astro";
import Float from "@components/links/Float.astro";
import Cover from "@components/links/Cover.astro";
import User from "@components/links/User.astro";
import Post from "@components/links/Post.astro";
import Votes from "@components/actions/Votes.astro";
import Reply from "@components/actions/ReplyComment.astro";
import Action from "@components/actions/Action.astro";
import type { CommentData } from "@lib/db";
import { Icon } from "astro-icon/components";
import Authorized from "@components/auth/Authorized.astro";

interface Props extends CommentData {
  active?: boolean;
  expanded?: boolean;
}

const {
  id,
  postId,
  description,
  userId,
  userName,
  upvotes,
  downvotes,
  votedScore,
  active = true,
  expanded = !active,
} = Astro.props;
---

<Card active={active}>
  <address slot="header">
    <Float>
      <User id={userId}>{userName}</User>
    </Float>
    {
      expanded && (
        <span>
          auf{" "}
          <Float>
            <Post id={postId}>urspr√ºnglichen Beitrag</Post>
          </Float>
        </span>
      )
    }
    <slot name="forum" />
  </address>
  <slot name="title" slot="header" />
  {description}
  <slot name="embed" slot="embed" />
  <Votes slot="footer" {...{ commentId: id, upvotes, downvotes, votedScore }} />
  <form slot="footer" data-astro-reload>
    <input name="id" type="hidden" value={id} />
    <Action target=`/comments/view/${id}` float={active}>
      <Icon name="material-symbols:link" title="link" />
      {!active && <Cover />}
    </Action>
    <Reply parentId={id} postId={postId} />
    <Authorized userId={userId}>
      <Action target=`/comments/delete/${id}`>
        <Icon name="material-symbols:delete" title="delete" />
      </Action>
    </Authorized>
  </form>
</Card>

<style>
  form {
    display: inline;
  }
</style>
