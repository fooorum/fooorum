---
import Card from "@components/cards/Card.astro";
import Cover from "@components/links/Cover.astro";
import Float from "@components/links/Float.astro";
import Title from "@components/links/Post.astro";
import Forum from "@components/links/Forum.astro";
import Comments from "@components/actions/Comments.astro";
import Embed from "@components/embeds/Embed.astro";
import type { PostData } from "@lib/db";
import { unprefixAttributes, getPrefixedAttributes } from "@lib/prefixes";
import User from "@components/links/User.astro";
import Comment from "@components/actions/ReplyPost.astro";
import Votes from "@components/actions/Votes.astro";
import Delete from "@components/actions/Delete.astro";

interface Props extends PostData {
  active?: boolean;
}

const {
  id,
  title,
  description,
  userId,
  userName,
  forumId,
  forumName,
  upvotes,
  downvotes,
  votedScore,
  comments,
  active = false,
} = Astro.props;
const { user } = Astro.locals;

const embed = unprefixAttributes(Astro.props, "embed");
const media = getPrefixedAttributes(Astro.props, "media");
---

<Card active={active}>
  <address slot="header">
    <Float>
      <User id={userId}>{userName}</User>
    </Float>
    in
    <Float>
      <Forum id={forumId ?? 0}>{forumName}</Forum>
    </Float>
  </address>
  <Title id={id} slot="header">
    {title}
    {!active && <Cover />}
  </Title>
  {description}
  {
    embed.url && (
      <Embed slot="embed" {...{ ...embed, url: embed.url, ...media }} />
    )
  }
  <Votes slot="footer" {...{ postId: id, upvotes, downvotes, votedScore }} />
  <form slot="footer" data-astro-reload>
    {
      active ? (
        <Comment postId={id} />
      ) : (
        <Comments postId={id} amount={comments} />
      )
    }
    {(userId === user?.id || user?.isAdmin) && <Delete postId={id} />}
  </form>
</Card>

<style>
  form {
    display: inline;
  }
</style>
